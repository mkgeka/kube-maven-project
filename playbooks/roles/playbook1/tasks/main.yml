---
# tasks file for playbook1
- name: Create a data container {{ BRANCH_NAME }}
  tags: testingimage
  community.general.docker_container:
    name: 'TEST-{{ BRANCH_NAME }}'
    image: 'mkgeka/kuber-lamp-7:{{ BUILD_ID }}'
    ports:
      - "127.0.0.1:36893:80" 

- name: Testing the image before deploying
  tags: testingimage
  wait_for: 
    port: 36893
    delay: 5

- name: Delete a data container {{ BRANCH_NAME }}
  tags: testingimage
  community.general.docker_container:
    name: 'TEST-{{ BRANCH_NAME }}'
    state: absent

- name: Creating the nginx application file with  "{{ BUILD_ID }}"
  tags: build,update
  template:
   src: nginx-deployment.yml
   dest: /tmp/nginx-{{ BUILD_ID }}.yml
   owner: root
   group: root
   mode: 0644

- name: Testing the nginx application file/ before deploying
  tags: build,update
  wait_for: 
    path: /tmp/nginx-{{ BUILD_ID }}.yml

- name: Deploy the nginx application
  tags: build,update
  k8s:
   state: present
   src: /tmp/nginx-{{ BUILD_ID }}.yml
   validate_certs: no
   namespace: default
   wait: yes
   wait_condition:
    reason: 'NewReplicaSetAvailable'
    status: 'True'
    type: 'Progressing'
  ignore_errors: yes

- name: Deploy the nginx-service.yml
  tags: build
  k8s:
   state: present
   definition: "{{ lookup('file', '../templates/nginx-service.yml') | from_yaml }}"
   validate_certs: no
   namespace: default
  ignore_errors: yes

- name: Creating the prod application file with  "{{ BUILD_ID }}"
  tags: production,update
  template:
   src: httpd-deployment.yml
   dest: /tmp/prod-httpd-{{ BUILD_ID }}.yml
   owner: root
   group: root
   mode: 0644

- name: Testing the prod application file/ before deploying
  tags: production,update
  wait_for: 
    path: /tmp/prod-httpd-{{ BUILD_ID }}.yml

- name: Deploy the prod application
  tags: production,update
  k8s:
   state: present
   src: /tmp/prod-httpd-{{ BUILD_ID }}.yml
   validate_certs: no
   namespace: default
   wait: yes
   wait_condition:
    reason: 'NewReplicaSetAvailable'
    status: 'True'
    type: 'Progressing'
  ignore_errors: yes

- name: Deploy the prod-httpd-service
  tags: production
  k8s:
   state: present
   definition: "{{ lookup('file', '../templates/prod-httpd-service.yml') | from_yaml }}"
   validate_certs: no
   namespace: default
  ignore_errors: yes

- name: Creating the httpd application file with  "{{ BUILD_ID }}"
  tags: build,update
  template:
   src: httpd-deployment.yml
   dest: /tmp/httpd-{{ BUILD_ID }}.yml
   owner: root
   group: root
   mode: 0644

- name: Testing the httpd application file/ before deploying
  tags: build,update
  wait_for: 
    path: /tmp/httpd-{{ BUILD_ID }}.yml

- name: Deploy the httpd application
  tags: build,update
  k8s:
   state: present
   src: /tmp/httpd-{{ BUILD_ID }}.yml
   validate_certs: no
   namespace: default
   wait: yes
   wait_condition:
    reason: 'NewReplicaSetAvailable'
    status: 'True'
    type: 'Progressing'
  ignore_errors: yes

- name: Deploy the httpd-service
  tags: build
  k8s:
   state: present
   definition: "{{ lookup('file', '../templates/httpd-service.yml') | from_yaml }}"
   validate_certs: no
   namespace: default
  ignore_errors: yes

- name: Deploy the ingress
  tags: build
  k8s:
   state: present
   definition: "{{ lookup('file', '../templates/ingress.yml') | from_yaml }}"
   validate_certs: no
   namespace: default
  ignore_errors: yes

- name: Deploy the ingress-controller
  tags: build
  k8s:
   state: present
   definition: "{{ lookup('file', '../templates/nginx-controller-{{ item }}.yml') | from_yaml }}"
   validate_certs: no
   namespace: default
  with_items:
   - [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
  ignore_errors: yes

- name: Deleting the httpd application file with  "{{ BUILD_ID }}"
  tags: build,update
  file:
   path: /tmp/httpd-{{ BUILD_ID }}.yml
   state: absent

- name: Deleting the nginx application file with  "{{ BUILD_ID }}"
  tags: build,update
  file:
   path: /tmp/nginx-{{ BUILD_ID }}.yml
   state: absent

